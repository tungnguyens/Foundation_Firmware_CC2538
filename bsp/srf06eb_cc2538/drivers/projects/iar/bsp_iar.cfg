//*****************************************************************************
//! @file       bsp_iar.cfg
//! @brief      IAR build configuration for CC2538 of the SmartRF06EB board
//!             support package.
//!
//! Revised     $Date: 2012-07-03 16:23:27 +0200 (ti, 03 jul 2012) $
//! Revision    $Revision: 7839 $
//
//  Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
//
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//    Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
//
//    Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
//    Neither the name of Texas Instruments Incorporated nor the names of
//    its contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//****************************************************************************/


/******************************************************************************
* Interrupt vector table configuration
*/
// If defined, the alternative (and less space consuming) interrupt vector
// table is used. This setting must be the same as that used by the driverlib.
// Default: Defined
-DCC2538_USE_ALTERNATE_INTERRUPT_MAP


/******************************************************************************
* LEDs
*/
// BSP_LED_EXCLUDE: If defined, bsp_led is not included in the bsp
// Default: Not defined
//-DBSP_LED_EXCLUDE


/******************************************************************************
* Keys
*/
// BSP_KEY_EXCLUDE: If defined, bsp_key is not included in the bsp
// Default: Not defined
//-DBSP_KEY_EXCLUDE


/******************************************************************************
* LCD
*/
// LCD_EXCLUDE: If defined, the lcd driver is not included in the bsp.
// Default: Not defined
//-DLCD_EXCLUDE

// LCD_NO_DEFAULT_BUFFER: If defined, no default buffer will be included. This
// frees 1024 bytes of SRAM. It is then the user's responsability to allocate
// enough SRAM for a LCD buffer.
// Default: Not defined
//-DLCD_NO_DEFAULT_BUFFER


/******************************************************************************
* Accelerometer
*/
// ACC_EXCLUDE: If defined, the accelerometer driver is not included in the bsp
// Default: Not defined
//-DACC_EXCLUDE


/******************************************************************************
* Ambient Light Sensor
*/
// ALS_EXCLUDE: If defined, the ambient light sensor driver is not included in
// the bsp
// Default: Not defined
//-DALS_EXCLUDE


/******************************************************************************
* SD Card
*/
// SDCARD_EXCLUDE: If defined, the SDCARD driver is not included in the bsp
// Default: Not defined
//-DSDCARD_EXCLUDE


/******************************************************************************
* BSP UART
*/
// BSP_UART_EXCLUDE: If defined, the USB UART driver is not included in the bsp
// Default: Not defined
//-DBSP_UART_EXCLUDE

// BSP_UART_ISR: If defined, UART communication is CPU ISR driven.
// Default: Defined
-DBSP_UART_ISR

// BSP_UART_ALLOCATE_ISR: The USB UART module does by default not allocate any
// interrupt service routines (ISRs). With BSP_UART_ISR defined, the user must
// allocate the ISR for the UART interrupt vector and call the USB UART
// handler from the ISR. If you wish the USB UART module to allocate the
// necessary ISRs, uncomment the below define.
// Default: Not defined
//-DBSP_UART_ALLOCATE_ISR

// BSP_UART_ALL_OR_NOTHING: If defined, functions bspUartDataGet() and
// bspUartDataPut() will only read(write) from(to) the UART buffer if the
// specified number of bytes are available(can fit) in the UART buffer. E.g.
// if 3 bytes are present in the UART RX buffer bspUartDataGet(myBuf, 4) will
// not read any bytes whereas bspUartDataGet(myBuf, 3) will read 3 bytes.
// Default: Not defined
//-DBSP_UART_ALL_OR_NOTHING


/******************************************************************************
* io_pin_int
*/
// IO_PIN_INT_EXCLUDE: If defined, the I/O pin interrupt handler is not
// included in the bsp. Note that other bsp modules, e.g. bsp_key, do depend
// on this module.
// Default: Not defined
//-DIO_PIN_INT_EXCLUDE
